{"version":3,"file":"static/js/443.75cba172.chunk.js","mappings":"wPAiFA,EA5EkB,WAEhB,OAAwBA,EAAAA,EAAAA,WAAS,GAAM,eAAhCC,EAAI,KAAEC,EAAO,KAGdC,GAAWC,EAAAA,EAAAA,KAQjB,OACE,iBAAKC,UAAU,yEAAwE,WAErF,gBAAKA,UAAU,aAAY,UACzB,iBACEA,UAAU,wCACVC,QAAS,WACPJ,GAASD,EACX,EAAE,UACH,UAEC,gBACEM,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,YAAa,IACbC,OAAO,eACPN,UAAU,sBAAqB,UAE/B,iBACEO,cAAc,QACdC,eAAe,QACfC,EAAE,yNAOV,gBAAKT,UAAU,8DAA6D,SAAC,YAG7E,gBACEA,UAAS,0BACPJ,EAAO,GAAK,SAAQ,qDAC8B,WAEpD,eACEI,UAAU,0EACVU,GAAG,IACHT,QAAS,SAACU,GACRb,GAASc,EAAAA,EAAAA,GAAOD,EAAEE,cAAcH,IAClC,EAAE,SACH,QAhDP,SAAgBI,EAAiBC,GAC/B,IAAMC,EAAM,IAAIC,IAChB,OAAOH,EAAII,QAAO,SAACC,GAAI,OAAMH,EAAII,IAAID,EAAKJ,KAASC,EAAIK,IAAIF,EAAKJ,GAAM,EAAE,GAC1E,CAgDOO,CAAOC,EAAc,UAAUC,KAAI,SAACL,GAAI,OACvC,gBACEnB,UAAU,0EAEVU,GAAIS,EAAKM,OACTxB,QAAS,SAACU,GACRb,GAASc,EAAAA,EAAAA,GAAOD,EAAEE,cAAcH,IAClC,EAAE,SAEDS,EAAKM,QANDN,EAAKT,GAON,SAKhB,E,uDCIA,EA9EqB,WAEnB,IAAMgB,GAAOC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMV,MAAM,IAG7CW,GAAWC,EAAAA,EAAAA,MAGTC,EAASC,EAAAA,EAAAA,KAEjB,OACE,gBAAKhC,UAAU,8BAA6B,UAC1C,UAAC,KAAc,CACbiC,MAAO,CACLC,MAAO,CACLC,aAAc,SAEhB,WAGF,UAAC,IAAU,CAACnC,UAAU,0BAAyB,WAC7C,SAAC,SAAe,WACd,SAAC,KAAI,CAACoC,GAAG,IAAG,SAAC,YAEf,SAAC,SAAe,WACd,SAAC,KAAI,CAACA,GAAG,QAAO,SAAC,eAIrB,SAAC,KAAI,CACHpC,UAAU,oBACVqC,KAAM,CACJC,OAAQ,EACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAYnB,EACZoB,WAAY,CACVC,SAAU,EACV/C,UAAW,+BAEbgD,WAAY,SAAC7B,GAAI,OACf,SAAC,UAAS,WACR,UAAC,IAAI,CACHnB,UAAU,uCACViD,WAAS,EACTC,UAAQ,EACRC,OACE,gBACEnD,UAAU,yBACVoD,IAAI,GACJC,IAAKlC,EAAKmC,UAGdrD,QAAS,WACP4B,EAAS,gBAAD,OAAiBV,EAAKT,IAChC,EAAE,WAEF,SAACqB,EAAI,CAACwB,MAAOpC,EAAKoC,SAClB,iBAAKvD,UAAU,OAAM,UAClBmB,EAAKqC,OACN,iBAAMxD,UAAU,OAAM,SAAC,WACtBmB,EAAKsC,WAER,SAAC1B,EAAI,CAAC2B,YAAavC,EAAKwC,WAEhB,QAMxB,EChDA,MA1BA,WAEE,IAAMC,GAAWC,EAAAA,EAAAA,MAAXD,OAWA9D,GAAWC,EAAAA,EAAAA,KAKjB,OAJA+D,EAAAA,EAAAA,YAAU,WACRhE,GAASc,EAAAA,EAAAA,GAAO,GAAD,YAVAmD,IAAXH,EACK,IAEAA,IAQX,KAGE,iBAAK5D,UAAU,yBAAwB,WACrC,SAAC,EAAS,KACV,SAAC,EAAY,MAGnB,C","sources":["component/ShopComponent/FilterSider.tsx","component/ShopComponent/ProductsShow.tsx","pages/productsPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../redux/hooks\";\r\nimport { result } from \"../../redux/feature/filterSlice\";\r\nimport productsList from \"../../data/products_list.json\";\r\n\r\nconst FilterNav = () => {\r\n  // 控制下拉菜單展開的狀態\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // redux toolkit 派發方法\r\n  const dispatch = useAppDispatch();\r\n\r\n  // 創建方法：根據某個property對數組去重，獲得不重複的series name，用於遍歷出filter的選項\r\n  function unique(arr: Array<any>, val: PropertyKey) {\r\n    const res = new Map();\r\n    return arr.filter((item) => !res.has(item[val]) && res.set(item[val], 1));\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-neutral-100 text-[1.25rem] p-3  lg:pt-6 lg:col-start-1 lg:col-end-1\">\r\n      {/* Filter 按键 电脑端不显示 */}\r\n      <div className=\"text-right\">\r\n        <div\r\n          className=\"lg:hidden inline-block cursor-pointer\"\r\n          onClick={() => {\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          Filter\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth={1.5}\r\n            stroke=\"currentColor\"\r\n            className=\"ml-1 w-6 h-6 inline\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      {/* 菜单选项 */}\r\n      {/* 传入state改变className */}\r\n      <div className=\"hidden text-[2.5rem] h-[3rem] leading-[3rem] mx-4 lg:inline\">\r\n        Series\r\n      </div>\r\n      <ul\r\n        className={`px-2 divide-y-2 ${\r\n          open ? \"\" : \"hidden\"\r\n        } lg:block lg:divide-y-2 lg:divide-gray-900 lg:m-6`}\r\n      >\r\n        <li\r\n          className=\"text-[1.5rem] h-[3rem] leading-[3rem] cursor-pointer active:bg-gray-300\"\r\n          id=\" \"\r\n          onClick={(e) => {\r\n            dispatch(result(e.currentTarget.id));\r\n          }}\r\n        >\r\n          All\r\n        </li>\r\n        {unique(productsList, \"series\").map((item) => (\r\n          <div\r\n            className=\"text-[1.5rem] h-[3rem] leading-[3rem] cursor-pointer active:bg-gray-300\"\r\n            key={item.id}\r\n            id={item.series}\r\n            onClick={(e) => {\r\n              dispatch(result(e.currentTarget.id));\r\n            }}\r\n          >\r\n            {item.series}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterNav;\r\n","import { Card } from \"antd\";\r\nimport { List, Breadcrumb, ConfigProvider } from \"antd\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst ProductsShow = () => {\r\n  // 產品顯示界面不需要派發，只需要接收數據進行狀態渲染\r\n  const list = useAppSelector((state) => state.filter);\r\n\r\n  // 路由跳轉\r\n  const navigate = useNavigate();\r\n\r\n  // Ant Design卡片组件\r\n  const { Meta } = Card;\r\n\r\n  return (\r\n    <div className=\"md:col-start-2 md:col-end-7\">\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorPrimary: \"gray\",\r\n          },\r\n        }}\r\n      >\r\n        {/* 麵包屑 */}\r\n        <Breadcrumb className=\"absolute z-20 ml-7 mt-5\">\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/\">Home</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/shop\">bike</Link>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        {/* Grid List 组件 */}\r\n        <List\r\n          className=\"bg-slate-200 pt-5\"\r\n          grid={{\r\n            gutter: 0,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 2,\r\n            lg: 2,\r\n            xl: 3,\r\n            xxl: 3,\r\n          }}\r\n          dataSource={list} // 这个参数会收到传来的数据\r\n          pagination={{\r\n            pageSize: 6,\r\n            className: \"float-none text-center pb-6\",\r\n          }}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                className=\"block h-[25rem] mt-10 cursor-pointer\"\r\n                hoverable\r\n                bordered\r\n                cover={\r\n                  <img\r\n                    className=\"h-[15rem] object-cover\"\r\n                    alt=\"\"\r\n                    src={item.img_url}\r\n                  />\r\n                }\r\n                onClick={() => {\r\n                  navigate(`/shop/detail/${item.id}`);\r\n                }}\r\n              >\r\n                <Meta title={item.title} />\r\n                <div className=\"my-6\">\r\n                  {item.price}\r\n                  <span className=\"px-2\">—</span>\r\n                  {item.weight}\r\n                </div>\r\n                <Meta description={item.text}></Meta>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsShow;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport FilterNav from \"../component/ShopComponent/FilterSider\";\r\nimport ProductsShow from \"../component/ShopComponent/ProductsShow\";\r\nimport { result } from \"../redux/feature/filterSlice\";\r\nimport { useAppDispatch } from \"../redux/hooks\";\r\n\r\nfunction ProductsPage() {\r\n  // 路由傳參\r\n  let { search } = useParams();\r\n  // 修改類型並保證輸出結果\r\n  let searchResult = () => {\r\n    if (search === undefined) {\r\n      return \" \";\r\n    } else {\r\n      return search as string;\r\n    }\r\n  };\r\n\r\n  // 派發\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(result(`${searchResult()}`));\r\n  });\r\n\r\n  return (\r\n    <div className=\"lg:grid lg:grid-cols-6\">\r\n      <FilterNav />\r\n      <ProductsShow />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["useState","open","setOpen","dispatch","useAppDispatch","className","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","id","e","result","currentTarget","arr","val","res","Map","filter","item","has","set","unique","productsList","map","series","list","useAppSelector","state","navigate","useNavigate","Meta","Card","theme","token","colorPrimary","to","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","pagination","pageSize","renderItem","hoverable","bordered","cover","alt","src","img_url","title","price","weight","description","text","search","useParams","useEffect","undefined"],"sourceRoot":""}